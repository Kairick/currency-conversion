version: "3.8"


x-base-data: &cc-based
  build:
    context: .
    dockerfile: ./deploy/Dockerfile
  env_file:
    - .env
  command: ["./wait-for-it.sh",  "database:5432"]


services:
  app:
    <<: *cc-based
    restart: always
    container_name: cc-app
    ports:
      - "8000:8000"
    depends_on:
      - migration
      - database
    command: ["gunicorn", "application:app", "-w=4", "-k=uvicorn.workers.UvicornWorker", "-b=0.0.0.0:8000"]

  migration:
    <<: *cc-based
    restart: no
    container_name: cc-migration
    depends_on:
      - database
    command: ["alembic", "upgrade", "head" ]

  database:
    container_name: cc-database
    image: postgres:15.3
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    env_file:
      - .env

  test-database:
    container_name: test-db
    image: postgres:15.3
    ports:
      - '54433:5432'
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=54433
    volumes:
      - pgdata_test:/var/lib/postgresql/data
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    env_file:
      - .env

volumes:
    pgdata:
    pgdata_test:

networks:
    default:
        name: cc-network
